apiVersion: template.openshift.io/v1
kind: Template
labels:
  rhsso: 7.4.1.GA
  template: sso74-x509-oracle
message: A new persistent RH-SSO service (using external Oracle) has been created in your
  project. The admin username/password for accessing the master realm via the RH-SSO
  console is in secret ${APPLICATION_NAME}-admin-secret.
  The HTTPS keystore used for serving secure content, the JGroups keystore used for
  securing JGroups communications, and server truststore used for securing RH-SSO
  requests were automatically created via OpenShift's service serving x509 certificate
  secrets.
metadata:
  annotations:
    description: An example application based on RH-SSO 7.4 on OpenJDK image for use with an Oracle external database. For
      more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso74-dev/docs.
    iconClass: icon-sso
    openshift.io/display-name: Red Hat Single Sign-On 7.4 on OpenJDK + External Oracle
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: sso,keycloak,jboss,oracle
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
    template.openshift.io/long-description: This template defines resources needed
      to develop Red Hat Single Sign-On 7.4 on OpenJDK server based deployment and securing RH-SSO communication
      using re-encrypt TLS.
    template.openshift.io/support-url: https://access.redhat.com
    version: 7.4.1.GA
  name: sso74-x509-oracle
  namespace: openshift
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/sso74-x509-oracle
objects:
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/base64-expose-password: '{.data[''password'']}'
      name: '${APPLICATION_NAME}-oracle-secret'
    stringData:
      password: ${ORACLE_PASSWORD}
      username: ${ORACLE_USERNAME}
  - apiVersion: v1
    kind: Secret
    metadata:
      annotations:
        template.openshift.io/base64-expose-password: '{.data[''password'']}'
      name: '${APPLICATION_NAME}-admin-secret'
    stringData:
      password: ${SSO_ADMIN_PASSWORD}
      username: ${SSO_ADMIN_USERNAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-oracle",
        "kind": "Service"}]'
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-https
    spec:
      ports:
        - port: 8443
          targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The web server's http port.
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-oracle",
        "kind": "Service"}]'
      labels:
        application: '${APPLICATION_NAME}'
      name: ${APPLICATION_NAME}-http
    spec:
      ports:
        - port: 8080
          targetPort: 8080
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations:
        description: The JGroups ping port for clustering.
        service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-ping
    spec:
      clusterIP: None
      ports:
        - name: ping
          port: 8888
      selector:
        deploymentConfig: ${APPLICATION_NAME}
  - apiVersion: v1
    id: ${APPLICATION_NAME}-http
    kind: Route
    metadata:
      annotations:
        description: Route for application's http service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-http
    spec:
      host: ${HOSTNAME_HTTP}
      to:
        name: ${APPLICATION_NAME}-http
  - apiVersion: v1
    id: ${APPLICATION_NAME}-https
    kind: Route
    metadata:
      annotations:
        description: Route for application's https service.
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-https
    spec:
      host: ${HOSTNAME_HTTPS}
      tls:
        termination: edge
      to:
        name: ${APPLICATION_NAME}-https
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}
    spec:
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      strategy:
        type: Recreate
      template:
        metadata:
          labels:
            application: ${APPLICATION_NAME}
            deploymentConfig: ${APPLICATION_NAME}
          name: ${APPLICATION_NAME}
        spec:
          containers:
            - env:
                - name: SSO_HOSTNAME
                  value: ${SSO_HOSTNAME}
                - name: DB_JNDI
                  value: ${DB_JNDI}
                - name: DB_USERNAME
                  value: ${DB_USERNAME}
                - name: DB_PASSWORD
                  value: ${DB_PASSWORD}
                - name: DB_DATABASE
                  value: ${DB_DATABASE}
                - name: DB_MIN_POOL_SIZE
                  value: ${DB_MIN_POOL_SIZE}
                - name: DB_MAX_POOL_SIZE
                  value: ${DB_MAX_POOL_SIZE}
                - name: DB_TX_ISOLATION
                  value: ${DB_TX_ISOLATION}
                - name: JGROUPS_PING_PROTOCOL
                  value: openshift.DNS_PING
                - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                  value: ${APPLICATION_NAME}-ping
                - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                  value: "8888"
                - name: X509_CA_BUNDLE
                  value: /var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - name: JGROUPS_CLUSTER_PASSWORD
                  value: ${JGROUPS_CLUSTER_PASSWORD}
                - name: SSO_ADMIN_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: ${APPLICATION_NAME}-admin-secret
                - name: SSO_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: ${APPLICATION_NAME}-admin-secret
                - name: SSO_REALM
                  value: ${SSO_REALM}
                - name: SSO_SERVICE_USERNAME
                  value: ${SSO_SERVICE_USERNAME}
                - name: SSO_SERVICE_PASSWORD
                  value: ${SSO_SERVICE_PASSWORD}
                - name: ORACLE_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: username
                      name: ${APPLICATION_NAME}-oracle-secret
                - name: ORACLE_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: password
                      name: ${APPLICATION_NAME}-oracle-secret
                - name: ORACLE_SERVICE_HOST
                  value: ${ORACLE_SERVICE_HOST}
                - name: ORACLE_SERVICE_PORT
                  value: ${ORACLE_SERVICE_PORT}
                - name: ORACLE_SERVICE_HOST_2
                  value: ${ORACLE_SERVICE_HOST_2}
                - name: ORACLE_SERVICE_PORT_2
                  value: ${ORACLE_SERVICE_PORT_2}
                - name: ORACLE_SERVICE_NAME
                  value: ${ORACLE_SERVICE_NAME}
              image: ${APPLICATION_NAME}
              imagePullPolicy: Always
              livenessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - /opt/eap/bin/livenessProbe.sh
                initialDelaySeconds: 60
              name: ${APPLICATION_NAME}
              ports:
                - containerPort: 8778
                  name: jolokia
                  protocol: TCP
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 8443
                  name: https
                  protocol: TCP
                - containerPort: 8888
                  name: ping
                  protocol: TCP
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - -c
                    - /opt/eap/bin/readinessProbe.sh
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - mountPath: /etc/x509/https
                  name: sso-x509-https-volume
                  readOnly: true
                - mountPath: /etc/x509/jgroups
                  name: sso-x509-jgroups-volume
                  readOnly: true
          terminationGracePeriodSeconds: 75
          volumes:
            - name: sso-x509-https-volume
              secret:
                secretName: sso-x509-https-secret
            - name: sso-x509-jgroups-volume
              secret:
                secretName: sso-x509-jgroups-secret
      triggers:
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: rhsso-oracle:1.0
              namespace: ${IMAGE_STREAM_NAMESPACE}
          type: ImageChange
        - type: ConfigChange
parameters:
  - description: The name for the application.
    displayName: Application Name
    name: APPLICATION_NAME
    required: true
    value: sso
  - description: Custom hostname for the RH-SSO server.
    displayName: Custom RH-SSO Server Hostname
    name: SSO_HOSTNAME
  - description: The password for the JGroups cluster.
    displayName: JGroups Cluster Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: JGROUPS_CLUSTER_PASSWORD
    required: true
  - description: Database JNDI name used by application to resolve the datasource, e.g.
      java:/jboss/datasources/KeycloakDS
    displayName: Database JNDI Name
    name: DB_JNDI
    value: java:jboss/datasources/KeycloakDS
  - description: Database name
    displayName: Database Name
    name: DB_DATABASE
    required: true
    value: root
  - description: Sets xa-pool/min-pool-size for the configured datasource.
    displayName: Datasource Minimum Pool Size
    name: DB_MIN_POOL_SIZE
  - description: Sets xa-pool/max-pool-size for the configured datasource.
    displayName: Datasource Maximum Pool Size
    name: DB_MAX_POOL_SIZE
  - description: Sets transaction-isolation for the configured datasource.
    displayName: Datasource Transaction Isolation
    name: DB_TX_ISOLATION
  - description: The maximum number of client connections allowed. This also sets the
      maximum number of prepared transactions.
    displayName: PostgreSQL Maximum number of connections
    name: POSTGRESQL_MAX_CONNECTIONS
  - description: Configures how much memory is dedicated to PostgreSQL for caching data.
    displayName: PostgreSQL Shared Buffers
    name: POSTGRESQL_SHARED_BUFFERS
  - description: Database user name
    displayName: Database Username
    from: user[a-zA-Z0-9]{3}
    generate: expression
    name: DB_USERNAME
    required: true
  - description: Database user password
    displayName: Database Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: DB_PASSWORD
    required: true
  - description: Namespace in which the ImageStreams for Red Hat Middleware images are
      installed. These ImageStreams are normally installed in the openshift namespace.
      You should only need to modify this if you've installed the ImageStreams in a
      different namespace/project.
    displayName: ImageStream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: RH-SSO Server administrator username
    displayName: RH-SSO Administrator Username
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    name: SSO_ADMIN_USERNAME
    required: true
  - description: RH-SSO Server administrator password
    displayName: RH-SSO Administrator Password
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    name: SSO_ADMIN_PASSWORD
    required: true
  - description: Realm to be created in the RH-SSO server (e.g. demorealm).
    displayName: RH-SSO Realm
    name: SSO_REALM
  - description: The username used to access the RH-SSO service. This is used by clients
      to create the appliction client(s) within the specified RH-SSO realm.
    displayName: RH-SSO Service Username
    name: SSO_SERVICE_USERNAME
  - description: The password for the RH-SSO service user.
    displayName: RH-SSO Service Password
    name: SSO_SERVICE_PASSWORD
  - description: Container memory limit.
    displayName: Container Memory Limit
    name: MEMORY_LIMIT
    value: 1Gi
  - description: Database username
    displayName: Database Username
    name: ORACLE_USERNAME
    required: true
  - description: Database password
    displayName: Database Password
    name: ORACLE_PASSWORD
    required: true
  - description: Database service host 1
    displayName: Database Service Host 1
    name: ORACLE_SERVICE_HOST
    required: true
  - description: Database service port 1
    displayName: Database Service Port 1
    name: ORACLE_SERVICE_PORT
    required: true
    value: "1521"
  - description: Database service host 2
    displayName: Database Service Host 2
    name: ORACLE_SERVICE_HOST_2
    required: false
  - description: Database service port 2
    displayName: Database Service Port 2
    name: ORACLE_SERVICE_PORT_2
    required: false
    value: "1521"
  - description: Database service name
    displayName: Database Service Name
    name: ORACLE_SERVICE_NAME
    required: true
    value: "XXX_PRIMARY.WORLD"
  - description: >-
      Custom hostname for http service route. Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>
    displayName: Custom http Route Hostname
    name: HOSTNAME_HTTP
  - description: >-
      Custom hostname for https service route. Leave blank for default hostname,
      e.g.: <application-name>.<project>.<default-domain-suffix>
    displayName: Custom https Route Hostname
    name: HOSTNAME_HTTPS
